//
//  Copyright (c) 2012 Stefan Bolte <portix@gmx.net>
//
//  This program is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation; either version 3 of the License, or
//  (at your option) any later version.
//  
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//  
//  You should have received a copy of the GNU General Public License along
//  with this program; if not, write to the Free Software Foundation, Inc.,
//  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//

/*<INFO
Subscribe to adblock filterlists
INFO>*/

var defaultConfig = {
//<DEFAULT_CONFIG
  // To take effect dwb needs to be restarted
  
  // Shortcut to subscribe to a filterlist
  scSubscribe : null, 
  // Command to subscribe to a filterlist
  cmdSubscribe : "adblock_subscribe", 
  
  // Shortcut to unsubscribe from a filterlist
  scUnsubscribe : null, 

  // Command to unsubscribe from a filterlist
  cmdUnsubscribe : "adblock_unsubscribe",

  // Path to the filterlist directory, will be created if it doesn't exist. 
  filterListDir : data.configDir + "/adblock_lists"
//>DEFAULT_CONFIG
};

var subscriptions = {
    "Easylist" : "https://easylist-downloads.adblockplus.org/easylist.txt",
    "Easylist_Without_element_hiding" : "https://easylist-downloads.adblockplus.org/easylist_noelemhide.txt",
    "Easylist_Privacy" : "https://easylist-downloads.adblockplus.org/easyprivacy.txt",
    "Easylist_Germany" : "https://easylist-downloads.adblockplus.org/easylistgermany.txt",
    "Easylist_Italy" : "https://easylist-downloads.adblockplus.org/easylistitaly.txt",
    "Easylist_Dutch" : "http://dutchadblockfilters.googlecode.com/svn/trunk/AdBlock_Dutch_hide.txt",
    "Easylist_French" : "http://lian.info.tm/liste_fr.txt",
    "Easylist_China" : "http://adblock-chinalist.googlecode.com/svn/trunk/adblock.txt",
    "Easylist_Bulgaria" : "http://stanev.org/abp/adblock_bg.txt",
    "Easylist_Indonesia" : "http://indonesianadblockrules.googlecode.com/hg/subscriptions/abpindo.txt",
    "Easylist_Finland" : "http://www.wiltteri.net/wiltteri.txt",
    "Easylist_Greece " : "http://www.void.gr/kargig/void-gr-filters.txt",
    "Adversity_English list" : "https://adversity.googlecode.com/hg/Adversity.txt",  
    "Adversity_Privacy" : "https://adversity.googlecode.com/hg/Adversity-Tracking.txt",
    "Fanboy_English_list" : "http://www.fanboy.co.nz/adblock/fanboy-adblock.txt",
    "Fanboy_Tracking_list" : "http://www.fanboy.co.nz/adblock/fanboy-tracking.txt"
};

var unsupported = "object-subrequest|ping|xbl|xmlhttprequest|dtd|elemhide|other|collapse|donottrack|popup";
var regUnsupported = new RegExp("(^@@.*[\$,]~(" + unsupported + ")($|,))|(^[^@].*[\$,](" + unsupported + ")($|,))", "mg");
var config = {};
var sigEnd = -1;

var downloadSubscription = function(name, notify) 
{
    var list;
    sendRequest(subscriptions[name], function(response, msg) {
        if (msg.statusCode == 200) 
        {
            var list = response.body.replace(/^[!\[].*\n?/gm, '');
            list = list.replace(regUnsupported, '');
            list = "! Last updated : " + new Date().toString() + "\n" + list;
            io.write(config.filterListDir + "/" + name, "w", list);

            if (notify)
                io.notify("Subscription '" + name.replace(/_/g, " ") + "' successful");
        }
    });
};

var lag = function(callback) 
{
    timerStart(10, function() { 
        callback();
        return false;
    });
};

var addSubscription = function() 
{
    var list = io.dirNames(config.filterListDir);
    var items = [];
    subscriptions.forEach(function(key, value) 
    {
        if (list.fastIndexOf(key) == -1) {
            items.push({ left : key.replace(/_/g, " "), right : value });
        }
    });
    tabComplete("Subscribe:", items, function(response) {
        downloadSubscription(response.replace(/\s/g, "_"), true);
    }, true);
};

var removeSubscription = function() 
{
    var items = [];

    var list = io.dirNames(config.filterListDir);
    list.sort();

    for (var i=0, l=list.length; i<l; ++i) 
        items.push({ left : list[i].replace(/_/g, " "), right : subscriptions[list[i]] });

    tabComplete("Unsubscribe:", items, function(response) {
        var fileName = config.filterListDir + "/" + response.replace(/ /g, "_");
        system.spawn("rm " + fileName);
        lag(function() {
            io.notify("Unsubscribed from '" + response + "'");
        });
    }, true);
};

var addCallback = function () { lag(addSubscription); };
var removeCallback = function () { lag(removeSubscription); };

var startup = function() 
{
    bind(config.scSubscribe, addCallback, config.cmdSubscribe);
    bind(config.scUnsubscribe, removeCallback, config.cmdUnsubscribe);
    if (!system.fileTest(config.filterListDir, FileTest.dir))
        system.mkdir(config.filterListDir, 0700);

    sigEnd = signals.connect("close", function() { 
        execute("set adblocker-filterlist " + config.filterListDir);
    });
    var list = io.dirNames(config.filterListDir);

    for (var i=0; i<list.length; i++) 
        downloadSubscription(list[i]);
};
return {
    defaultConfig : defaultConfig,

    init : function(c) 
    {
        config = c;
        startup();
        return true;
    },
    end : function() 
    {
        signals.disconnect(sigEnd);
        unbind(addCallback);
        unbind(removeCallback);
    }
};
// vim: set ft=javascript:
